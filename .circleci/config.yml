aliases:
  - &restore-npm-cache
    keys:
      - v1-dependencies-{{ checksum "package-lock.json" }}
      - v1-dependencies-master
      - v1-dependencies-
    name: Restoring node_modules/ cache
  - &save-npm-cache
    key: v1-dependencies-{{ checksum "package-lock.json" }}
    name: Saving node_modules/ cache
    paths:
      - node_modules
  - &restore-build-cache
    key: v1-build-buildcache-{{ .Revision }}
    name: Restoring lib/ cache
  - &save-build-cache
    key: v1-build-buildcache-{{ .Revision }}
    name: Saving lib/ cache
    paths:
      - lib

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

publish-only: &publish-only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /v[0-9]+(\.[0-9]+)*/

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: yarn build
      - save_cache: *save-build-cache

  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run:
          name: Install Node modules
          command: npm i -ci
      - save_cache: *save-npm-cache

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: yarn lint

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - restore_cache: *restore-build-cache
      - run:
          name: Setup .npmrc
          command: printf "@modus:registry=https://npm.modus.app\n//npm.modus.app/:_authToken=\"%s\"" "$MODUS_NPM_TOKEN" >> ~/.npmrc
      - run: npm publish

workflows:
  version: 2
  test-and-publish:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - build:
          requires:
            - lint
      - publish:
          <<: *publish-only
          requires:
            - build
